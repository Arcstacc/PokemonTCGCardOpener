CreatePokemon.java object

Get file data method: (Parameter is file name)
To access the pokemon names
1025 pokemon Pokemon names
https://docs.google.com/spreadsheets/d/1eM6FzSPY_4okSNhsQDSIl0QFg3QHLVEsqm-khs4Vhnk/edit?gid=0#gid=0

Constructor (DEFAULT CONSTRUCTOR BECAUSE THE OBJECT CREATES ITSELF RANDOMLY):
-Random gender (b/t 0-1)
-Random name for pokemon (With method)
-Pokemon IV’s (With method)
-Pokemon PV’s (With method)
-Pokemon characteristic (String Message with method)
-Poklemon rarity (With method)

Getter method:
Returns a string of all

Random name method:
-Goes through a list of the pokemon names and choses one random name according to random number b/t 1-1025. No parameter, returns string.

Pokemon mechanics IV’s method (Individual values), no parameters, returns list of IV's
HP, Attack, Defense, Special Attack, Special Defense and Speed. Each range from 0-31
Use math.random to generate random values between 0-31.

Characteristics method (Based on Highest IV) (Displays message on characteristics)
Utilizes many conditions to determine highest IV and then choosing a random message between 1-5.
HP
-Loves to eat
-Takes plenty of siestas
-Nods off a lot
-Scatters things often
-Likes to relax
Attack
-Proud of its power
-Likes to thrash about
-A little quick tempered
-Likes to fight
-Quick tempered
Defense
-Sturdy body
-Capable of taking hits
-Highly persistent
-Good endurance
-Good perseverance
Special Attack
-Highly curious
-Mischievous
-Thoroughly cunning
-Often lost in thought
-Very finicky
Special Defense
-Strong willed
-Somewhat vain
-Strongly defiant
-Hates to lose
-Somewhat stubborn
Speed
-Likes to run
-Alert to sounds
-Impetuous and silly
-Somewhat of a clown
-Quick to flee

Math for indexing charactteristics
0,1,2,3,4,5
0-4, 5-9, 10-14, 15-19, 20-24, 25-29
index * 5 + random bt 0-4


Personality Values (PVs), no parameters, returns string of PV’s
Utilizes math.random to chose random personality values. Height ratios can range and increase the value of the card.
Height ratio
Weight ratio
Growth rate

Rarity Values (RVs), no parameters, return list of RVs
Utilizes math.random to chose a collection of rarity values, it is completely possible to get all rarirties in one card and make BANK.
Normal (1/1) (1xValue)
Shininess (1/3) (3xValue)
Full art  (1/5) (6xValue)
Reverse holo (1/10) (7xValue)
Ghost foil (1/20) (9xValue)
Limited edition (1/30) (12xValue)
Das’s signature (1/50) (20xValue)
Returns a string of rarity value
If no rarity, return normal

Find pokemon value, no parameters, return double of value
-Generates a random base value between 0.10$-0.25$
-Finds multiplier for value based (IV’s, PV’s, RV’s)

Pokedex object (Where you can admire all the pokemon you’ve collected so far)
Default constructor
-inits new array for holding pokemon
-count variable = 0 for counting number of pokemon
Adder method, pokemon object parameter,void return: Adds pokemon to a Storage of pokemon objects

Sell method, double return: removes pokemon from list and sells removes pokemon from list

Getter method, no parameter, list return: Returns a neat list of all pokemon


Bank object (Just keeps track of money)
Variables, Money, DecimalFormat
Constructor, Parameter for starting cash,: inits bank with starting money (Will be decided in program)

Adder method, sold pokemon cost parameter, void returns: add the value of a pokemon sold to the bank cost

Withdraw method, double parameter for card cost, takes away money from the bank for cards

Getter method, no parameter, returns double of money left: Gets bank informatrion




Main.java
-Init important objects like pokedex and bank
-Introduce user to the game
-Access to a menu of 1. Draw cards 2. Change draw amount 3. Look at pokedex 4. Look at bank 5. Sell pokemon 6. Leave

While userinput == 1, use pokemon.java to draw a random pokemon card
Checks if user has enough money with the bank
-add pokemon to pokedex
-Withdraw money from bank
-Go back to menu

User input = 2
Get user input to change cards per roll. There will be a variable for user input 1 for this in main.

User input = 3
-For loop going through the list of pokemon with it’s attributes, values, and cost
-Go back to menu

User input = 4
-Getter method for bank, informing the user of the amount of money they are allowed

User Input = 5
-Just sell everything using pokedex and pokemon costs
-Add money to bank

If input is 6, then the program ends.

Whole program is a while loop of, while != 6, run program





